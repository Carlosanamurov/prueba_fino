name: Deploy to Production

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: ghcr.io/carlosanamurov/prueba_fino/fastapi-app:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_DOS }}
      
      - name: Build and push
        run: |
          docker build -t $DOCKER_IMAGE .
          docker push $DOCKER_IMAGE

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y sshpass docker-compose
      
      - name: Deploy to server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          # Copiar archivos necesarios
          sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no \
            docker-compose.prod.yml mysql-config.cnf .env.prod \
            $SSH_USER@$SSH_HOST:/opt/app/
          
          # Ejecutar despliegue
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'DEPLOY_EOF'
          cd /opt/app
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml up -d --force-recreate
          DEPLOY_EOF