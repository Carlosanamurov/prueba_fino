name: Deploy to Production

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: ghcr.io/carlosanamurov/prueba_fino/fastapi-app:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_DOS }}
          
      - name: Build and push
        run: |
          docker build -t $DOCKER_IMAGE .
          docker push $DOCKER_IMAGE

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass
      
      - name: Verify files exist
        run: |
          ls -la docker-compose.prod.yml
          ls -la mysql-config.cnf
          ls -la .env.prod
      
      - name: Deploy to server
  env:
    SSH_HOST: ${{ secrets.SSH_HOST }}
    SSH_USER: ${{ secrets.SSH_USER }}
    SSH_PASS: ${{ secrets.SSH_PASSWORD }}
    GHCR_TOKEN: ${{ secrets.TOKEN_DOS }}
  run: |
    # 1. Crear directorio con sudo
    sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST \
      "sudo mkdir -p /opt/app && sudo chown $SSH_USER:$SSH_USER /opt/app && sudo chmod 755 /opt/app"
    
    # 2. Verificar creaci√≥n
    sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST \
      "ls -ld /opt/app" || exit 1
    
    # 3. Copiar archivos
    sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no \
      docker-compose.prod.yml mysql-config.cnf .env.prod \
      $SSH_USER@$SSH_HOST:/opt/app/
    
    # 4. Desplegar
    sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'DEPLOY_EOF'
    set -e
    cd /opt/app
    echo "$TOKEN_DOS" | docker login ghcr.io -u Carlosanamurov --password-stdin
    docker-compose -f docker-compose.prod.yml pull
    docker-compose -f docker-compose.prod.yml up -d --force-recreate
    DEPLOY_EOF